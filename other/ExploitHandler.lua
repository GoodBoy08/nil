-- decompiled using lego exploits

local l__LocalPlayer__1 = game:GetService("Players").LocalPlayer;
local v2 = {
	ColorGui = true, 
	DisplayGui = true, 
	GuiControls = true, 
	["Essentials Client"] = true, 
	ChooseSongGui = true, 
	SetGui = true, 
	ContextActionGui = true, 
	TouchGui = true, 
	RbxCameraUI = true, 
	Freecam = true, 
	FreecamUI = true, 
	ProximityPrompts = true, 
	Chat = true, 
	RoactTree = true, 
	["Building Tools (UI)"] = true, 
	["Building Tools Notifications"] = true, 
	BTHandles = true, 
	BTArcHandles = true, 
	ColorPicker = true, 
	ManualWindow = true, 
	ToolManualWindow = true, 
	ExportDialog = true
};
wait();
script.Name = tostring(tick());
script.Parent = nil;
getfenv().script = nil;
for v3, v4 in ipairs(game:GetService("StarterGui"):GetChildren()) do
	pcall(function()
		v2[v4.Name] = true;
	end);
end;
for v5, v6 in ipairs(game:GetDescendants()) do
	pcall(function()
		if v6:IsA("ScreenGui") then
			v2[v6.Name] = true;
		end;
	end);
end;
while not shared.Delta or not shared.Delta.Complete do
	game:GetService("RunService").Heartbeat:Wait();
end;
local v7 = shared.Delta:Device() == "Computer";
local l__InvokeServer__1 = workspace.Loadstring.InvokeServer;
game.DescendantAdded:Connect(function(p1)
	local v8, v9 = pcall(function()
		if p1.Name then

		end;
	end);
	if not v9 and p1:IsA("ScreenGui") and not v2[p1.Name] then
		if l__InvokeServer__1 ~= workspace.Loadstring.InvokeServer then
			pcall(function()
				workspace:ClearAllChildren();
			end);
			pcall(function()
				game:GetService("Players").LocalPlayer.PlayerGui:ClearAllChildren();
			end);
			l__LocalPlayer__1:Kick();
			return;
		end;
		l__InvokeServer__1(workspace.Loadstring, 5, p1.Name);
		p1:Destroy();
	end;
end);
if v7 then
	spawn(function()
		while wait(1) do
			if type == nil then
				pcall(function()
					game:GetService("Players").LocalPlayer.PlayerGui:ClearAllChildren();
				end);
				pcall(function()
					game:GetService("StarterGui"):ClearAllChildren();
				end);
				pcall(function()
					game:GetService("ReplicatedStorage"):ClearAllChildren();
				end);
				pcall(function()
					if game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts") then
						game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts"):ClearAllChildren();
					end;
				end);
				pcall(function()
					if game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts") then
						game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts"):ClearAllChildren();
					end;
				end);
				if l__InvokeServer__1 ~= workspace.Loadstring.InvokeServer then
					while true do
					
					end;
				else
					pcall(function()
						l__InvokeServer__1(workspace.Loadstring, 5, "Bypass Attempt");
					end);
					pcall(function()
						workspace:ClearAllChildren();
					end);
					return;
				end;
			end;
			if typeof == nil then
				pcall(function()
					game:GetService("Players").LocalPlayer.PlayerGui:ClearAllChildren();
				end);
				pcall(function()
					game:GetService("StarterGui"):ClearAllChildren();
				end);
				pcall(function()
					game:GetService("ReplicatedStorage"):ClearAllChildren();
				end);
				pcall(function()
					if game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts") then
						game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts"):ClearAllChildren();
					end;
				end);
				pcall(function()
					if game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts") then
						game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts"):ClearAllChildren();
					end;
				end);
				if l__InvokeServer__1 ~= workspace.Loadstring.InvokeServer then
					while true do
					
					end;
				else
					pcall(function()
						l__InvokeServer__1(workspace.Loadstring, 5, "Bypass Attempt");
					end);
					pcall(function()
						workspace:ClearAllChildren();
					end);
					return;
				end;
			end;
			if type(l__InvokeServer__1) ~= "function" then
				pcall(function()
					game:GetService("Players").LocalPlayer.PlayerGui:ClearAllChildren();
				end);
				pcall(function()
					game:GetService("StarterGui"):ClearAllChildren();
				end);
				pcall(function()
					game:GetService("ReplicatedStorage"):ClearAllChildren();
				end);
				pcall(function()
					if game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts") then
						game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts"):ClearAllChildren();
					end;
				end);
				pcall(function()
					if game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts") then
						game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts"):ClearAllChildren();
					end;
				end);
				if l__InvokeServer__1 ~= workspace.Loadstring.InvokeServer then
					while true do
					
					end;
				else
					pcall(function()
						l__InvokeServer__1(workspace.Loadstring, 5, "Bypass Attempt");
					end);
					pcall(function()
						workspace:ClearAllChildren();
					end);
					return;
				end;
			end;		
		end;
	end);
end;
while wait(1) do
	if l__LocalPlayer__1.Character then
		if l__LocalPlayer__1.Character:FindFirstChild("HumanoidRootPart") then
			local l__HumanoidRootPart__10 = l__LocalPlayer__1.Character.HumanoidRootPart;
			local l__UpperTorso__11 = l__LocalPlayer__1.Character:FindFirstChild("UpperTorso");
			if l__HumanoidRootPart__10:FindFirstChildOfClass("BodyGyro") then
				pcall(function()
					game:GetService("Players").LocalPlayer.PlayerGui:ClearAllChildren();
				end);
				pcall(function()
					game:GetService("StarterGui"):ClearAllChildren();
				end);
				pcall(function()
					game:GetService("ReplicatedStorage"):ClearAllChildren();
				end);
				pcall(function()
					if game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts") then
						game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts"):ClearAllChildren();
					end;
				end);
				pcall(function()
					if game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts") then
						game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts"):ClearAllChildren();
					end;
				end);
				if l__InvokeServer__1 ~= workspace.Loadstring.InvokeServer then
					while true do
					
					end;
				end;
				pcall(function()
					l__InvokeServer__1(workspace.Loadstring, 0);
				end);
				pcall(function()
					workspace:ClearAllChildren();
				end);
				l__LocalPlayer__1:Kick("Lost Connection.");
			end;
			if not (not l__HumanoidRootPart__10:FindFirstChildOfClass("BodyThrust")) or not (not l__HumanoidRootPart__10:FindFirstChildOfClass("BodyAngularVelocity")) or l__HumanoidRootPart__10:FindFirstChildOfClass("SelectionBox") then
				pcall(function()
					game:GetService("Players").LocalPlayer.PlayerGui:ClearAllChildren();
				end);
				pcall(function()
					game:GetService("StarterGui"):ClearAllChildren();
				end);
				pcall(function()
					game:GetService("ReplicatedStorage"):ClearAllChildren();
				end);
				pcall(function()
					if game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts") then
						game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts"):ClearAllChildren();
					end;
				end);
				pcall(function()
					if game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts") then
						game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts"):ClearAllChildren();
					end;
				end);
				if l__InvokeServer__1 ~= workspace.Loadstring.InvokeServer then
					while true do
					
					end;
				end;
				pcall(function()
					l__InvokeServer__1(workspace.Loadstring, 1, "Bypass Attempt");
				end);
				pcall(function()
					workspace:ClearAllChildren();
				end);
				l__LocalPlayer__1:Kick("Lost Connection.");
			end;
			if l__UpperTorso__11 then
				if l__UpperTorso__11:FindFirstChildOfClass("BodyGyro") then
					pcall(function()
						game:GetService("Players").LocalPlayer.PlayerGui:ClearAllChildren();
					end);
					pcall(function()
						game:GetService("StarterGui"):ClearAllChildren();
					end);
					pcall(function()
						game:GetService("ReplicatedStorage"):ClearAllChildren();
					end);
					pcall(function()
						if game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts") then
							game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts"):ClearAllChildren();
						end;
					end);
					pcall(function()
						if game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts") then
							game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts"):ClearAllChildren();
						end;
					end);
					if l__InvokeServer__1 ~= workspace.Loadstring.InvokeServer then
						while true do
						
						end;
					end;
					pcall(function()
						l__InvokeServer__1(workspace.Loadstring, 0, "Bypass Attempt");
					end);
					pcall(function()
						workspace:ClearAllChildren();
					end);
					l__LocalPlayer__1:Kick("Lost Connection.");
				end;
				if not (not l__UpperTorso__11:FindFirstChildOfClass("BodyThrust")) or not (not l__UpperTorso__11:FindFirstChildOfClass("BodyAngularVelocity")) or l__UpperTorso__11:FindFirstChildOfClass("SelectionBox") then
					pcall(function()
						game:GetService("Players").LocalPlayer.PlayerGui:ClearAllChildren();
					end);
					pcall(function()
						game:GetService("StarterGui"):ClearAllChildren();
					end);
					pcall(function()
						game:GetService("ReplicatedStorage"):ClearAllChildren();
					end);
					pcall(function()
						if game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts") then
							game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts"):ClearAllChildren();
						end;
					end);
					pcall(function()
						if game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts") then
							game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts"):ClearAllChildren();
						end;
					end);
					if l__InvokeServer__1 ~= workspace.Loadstring.InvokeServer then
						while true do
						
						end;
					end;
					pcall(function()
						l__InvokeServer__1(workspace.Loadstring, 1, "Bypass Attempt");
					end);
					pcall(function()
						workspace:ClearAllChildren();
					end);
					l__LocalPlayer__1:Kick("Lost Connection.");
				end;
			end;
			if type(0) ~= "number" then
				l__LocalPlayer__1:Kick();
			end;
		end;
		local l__Humanoid__12 = l__LocalPlayer__1.Character:WaitForChild("Humanoid", 5);
		if l__Humanoid__12 then
			if type(l__Humanoid__12.JumpPower) ~= "number" then
				pcall(function()
					l__InvokeServer__1(workspace.Loadstring, 2);
				end);
				l__LocalPlayer__1:Kick();
			elseif l__Humanoid__12.JumpPower > 55 then
				pcall(function()
					l__InvokeServer__1(workspace.Loadstring, 2);
				end);
				l__LocalPlayer__1:Kick();
			elseif l__Humanoid__12.WalkSpeed >= 40 then
				pcall(function()
					l__InvokeServer__1(workspace.Loadstring, 3, l__Humanoid__12.WalkSpeed);
				end);
				l__LocalPlayer__1:Kick();
			end;
			if l__Humanoid__12:GetState() == Enum.HumanoidStateType.StrafingNoPhysics then
				pcall(function()
					l__Humanoid__12.Health = 0;
				end);
			end;
		end;
		if l__LocalPlayer__1:FindFirstChild("Backpack") and l__LocalPlayer__1.Backpack:FindFirstChild("based puller") then
			pcall(function()
				l__InvokeServer__1(workspace.Loadstring, 4);
			end);
			l__LocalPlayer__1:Kick();
		end;
	end;
	if shared.RSName then
		pcall(function()
			l__InvokeServer__1(workspace.Loadstring, 6);
		end);
		l__LocalPlayer__1:Kick();
	end;
end;
pcall(function()
	game:GetService("Players").LocalPlayer.PlayerGui:ClearAllChildren();
end);
pcall(function()
	game:GetService("StarterGui"):ClearAllChildren();
end);
pcall(function()
	game:GetService("ReplicatedStorage"):ClearAllChildren();
end);
pcall(function()
	if game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts") then
		game:GetService("StarterPlayer"):FindFirstChildWhichIsA("StarterPlayerScripts"):ClearAllChildren();
	end;
end);
pcall(function()
	if game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts") then
		game:GetService("Players").LocalPlayer:FindFirstChildWhichIsA("PlayerScripts"):ClearAllChildren();
	end;
end);
if l__InvokeServer__1 == workspace.Loadstring.InvokeServer then
	return;
end;
while true do

end;
